@model IEnumerable<RechargeTools.Models.Catalog.Agent>
@{
    ViewBag.Title = "Números";
}
@section css{

    @Styles.Render("~/Content/table")
}
<input type="hidden" value="@ViewBag.number_search" id="number_search" />
<div class="row">
    <div class="col-12">

        <select id="agent-selected" class="form-control form-control-lg custom-select custom-select-lg">
            @foreach (var agent in Model)
            {
                <option value="@agent.Id" @(agent.Selected ? "selected" : "")>@agent.Name</option>
            }
        </select>
        <div class="row" id="form_lot">
            <div class="col">
                <h2 class="text-center">Insertar Números</h2>
                <p class="text-muted text-center">
                    Insertar uno por línea
                </p>
                <div class="form-horizontal">
                    <div class="form-group">
                        <textarea class="w-100 form-control" inputmode="verbatim" rows="5"></textarea>
                        <p class="text-danger" style="display:none;">Estos números no pudieron insertarse porque contienen error</p>
                    </div>
                    <div class="form-group text-center">
                        <a class="btn btn-dark" href="javascript:register_numbers();">Agregar</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="pull-right btn-editions">
            <a class="btn-copy btn btn-success btn-sm ml-lg-1 pull-left" href="javascript:copy_numbers();">Copiar Pendientes</a>
            <select id="copy-length" class="custom-select custom-select-sm form-control form-control-sm w-25 ml-1 pull-left">
                <option value="10" selected>10</option>
                <option value="20">20</option>
                <option value="50">50</option>
                <option value="0">Todos</option>
            </select>
            <a class="btn-copy btn btn-dark btn-sm ml-lg-1 pull-left ml-1" href="javascript:reorganize_consecutives();">Ord. Consec.</a>
        </div>
        <table id="data-table" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th data-priority="1">Cons</th>
                    <th data-priority="1">Número</th>
                    <th data-priority="1">Confirmación</th>
                    <th class="no-sort" data-priority="2">Usuario</th>
                    <th data-priority="2">Creado</th>
                    <th data-priority="2">Actualizado</th>
                    <th data-priority="2" class="no-sort"></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div class="modal fade" id="copyModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Trabajador</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <textarea type="text" id="numbers_to_clipboard" rows="10"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-dark" data-dismiss="modal" onclick="send_mark();">Marcar Confirmación</button>
            </div>
        </div>
    </div>
</div>

@section scripts{

    @Scripts.Render("~/bundles/table")

    <script type="text/javascript">
        $(document).ready(function () {
            reorganize_consecutives = function () {
                $.ajax({
                    type: 'POST',
                    data: {
                        recharge_id: '@ViewBag.Recharge.Id',
                        agent_id: $("#agent-selected").val()
                    },
                    url: "/Home/ReorganizeConsecutives",
                    dataType: 'json',
                    success: function (data) {
                        $("#numbers_to_clipboard").val("");
                        TLN.remove_line_numbers('numbers_to_clipboard');
                        table.ajax.reload();
                    }
                });
            };

            send_mark = function () {
                $.ajax({
                    type: 'POST',
                    data: {
                        recharge_id: '@ViewBag.Recharge.Id',
                        agent_id: $("#agent-selected").val(),
                        data: $("#numbers_to_clipboard").val()
                    },
                    url: "/Home/UpdateNumbers",
                    dataType: 'json',
                    success: function (data) {
                        $("#numbers_to_clipboard").val("");
                        TLN.remove_line_numbers('numbers_to_clipboard');
                        table.ajax.reload();
                    }
                });
            };

            register_numbers = function () {
                $("#form_lot textarea").addClass("disabled");
                $("#form_lot textarea").attr("disabled", "true");
                $("#form_lot .btn-dark").addClass("disabled");
                $("#form_lot p.text-danger").hide();

                $.ajax({
                    type: 'POST',
                    data: {
                        recharge_id: '@ViewBag.Recharge.Id',
                        agent_id: $("#agent-selected").val(),
                        data: $("#form_lot textarea").val()
                    },
                    url: "/Home/AddNumbers",
                    dataType: 'json',
                    success: function (data) {
                        $("#form_lot textarea").removeClass("disabled");
                        $("#form_lot textarea").removeAttr("disabled");
                        $("#form_lot .btn-dark").removeClass("disabled");
                        table.ajax.reload();
                        $("#form_lot textarea").val(data);
                        if (data !== "") {
                            $("#form_lot p.text-danger").show();
                        }
                    }
                });
            };

            $('#agent-selected').on('change', function (e) {
                $.ajax({
                    type: 'POST',
                    data: {
                        agent_id: $(this).val()
                    },
                    url: "/Home/AgentSelect",
                    dataType: 'json',
                    success: function (data) {
                        table.ajax.reload();
                    }
                });
            });

            change_row = function (id) {
                $.ajax({
                    type: 'POST',
                    data: {
                        id: id
                    },
                    url: "/Home/Change",
                    dataType: 'json',
                    success: function (data) {
                        table.ajax.reload();
                    }
                });
            }

            var editor;

            editor = new $.fn.dataTable.Editor({
                ajax: "/Home/Edit",
                table: "#data-table",
                fields: [{
                    label: "Number:",
                    name: "number"
                }
                ],
                formOptions: {
                    inline: {
                        onBlur: 'submit'
                    }
                }
            });

            // Activate an inline edit on click of a table cell
            $('#data-table').on('click', 'tbody td:nth-child(2)', function (e) {
                editor.inline(this);
            });

            var table = $("#data-table").DataTable({
                dom: "lBfrtip",
                responsive: 1,
                select: 0,
                fixedHeader: !0,
                ajax: {
                    "url": "/Home/Search",
                    "type": "POST",
                    "data": function (d) {
                        d.type = $("#agent-selected").val()
                    }
                },
                "processing": true,
                "serverSide": true,
                columns: [
                    { data: "consecutive" },
                    { data: "number" },
                    {
                        "render": function (data, type, JsonResultRow, meta) {
                            var actions = "";
                            if (JsonResultRow.number !== '' && JsonResultRow.number !== null) {
                                actions += '<a class=\'btn ' + (JsonResultRow.confirmation === "False" ? 'btn-default' : 'btn-success') + ' btn-sm\' href=\'javascript:change_row("' + JsonResultRow.DT_RowId + '");\'><i class=\'fa fa-check\'></i></a><br />';
                            }
                            return actions;
                        }
                    },
                    { data: "user" },
                    { data: "created_date" },
                    { data: "updated_date" },
                    {
                        "render": function (data, type, JsonResultRow, meta) {
                            var actions = "";
                            if (JsonResultRow.number !== '' && JsonResultRow.number !== null) {
                                actions += '<a class=\'btn btn-danger btn-sm\' href=\'javascript:delete_row("' + JsonResultRow.DT_RowId + '");\'>Eliminar</a><br />';
                            }
                            return actions;
                        }
                    }
                ],
                "rowCallback": function (row, data) {
                    /* mainView.contents.push(new dataModel(data));*/
                },
                "iDisplayLength": 25,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "select": {
                        "rows": ""
                    }
                },
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false
                }],
                "order": [[0, "desc"]],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                buttons: []
            });

            delete_row = function (id) {
                $.ajax({
                    type: 'POST',
                    data: {
                        id: id
                    },
                    url: "/Home/Delete",
                    dataType: 'json',
                    success: function (data) {
                        table.ajax.reload();
                    }
                });
            }
            $("#data-table_filter input").val($("#number_search").val());
            $("#data-table_filter input").keyup();

            copy_numbers = function () {
                var value = "", cont = 0, copy_length = parseInt( $("#copy-length").val());
                console.log(copy_length);

                table.data().reverse().each(function (data, index) {
                    if (data.number != null && data.confirmation === "False") {

                        if (cont == copy_length && copy_length!=0) {
                            console.log(cont);
                            return false;
                        }
                        value += data.number + "\n";
                        cont++;
                    }
                });
                $("#numbers_to_clipboard").val(value);
                TLN.remove_line_numbers('numbers_to_clipboard');
                TLN.append_line_numbers('numbers_to_clipboard');
                $("#copyModal").modal("show");
            }

        });
    </script>
}