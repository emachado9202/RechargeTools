@model  RechargeTools.Models.Views.RechargeViewModel
@{
    ViewBag.Title = "Agentes de " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{

    @Styles.Render("~/Content/table")
}
<div>
    <h4>Agentes de @Model.Name</h4>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateEnd)
        </dd>
    </dl>
</div>
<div class="pull-right btn-editions">
    <a class="btn btn-success btn-sm ml-lg-1" data-toggle="modal" data-target="#selectModal">Agregar Agente</a>
    @using (Html.BeginForm("ImportAgents", "Recharge", FormMethod.Post, new { @class = "show-inline" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" value="@Model.DT_RowId" name="DT_RowId" />
        <button type="submit" class="btn btn-primary btn-sm">Importar Agentes</button>
    }
</div>
<table id="data-table" class="table table-striped table-bordered" width="100%">
    <thead>
        <tr>
            <th>
                Nombre
            </th>
            <th>
                Costo
            </th>
            <th class="no-sort">
            </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div class="modal fade" id="selectModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Agente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("AddAgent", "Recharge", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" value="@Model.DT_RowId" name="DT_RowId" />
                <div class="modal-body text-center">
                    <p>Seleccione el Agente y establezca el costo de la recarga</p>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Agent_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("Agent_Id", new SelectList(ViewBag.Agents, "Id", "Name"), new { @class = "custom-select form-control" })
                            @Html.ValidationMessageFor(model => model.Agent_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Agent_Cost, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Agent_Cost, new { htmlAttributes = new { @class = "form-control ml-2" } })
                            @Html.ValidationMessageFor(model => model.Agent_Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Agregar</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/table")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#filter-datatable").change(function () {
                table.ajax.reload();
                var newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?id=' + $(this).val();
                window.history.pushState({ path: newurl }, '', newurl);
            });

            $("#filter-exist").change(function () {
                table.ajax.reload();
            });

            var table = $("#data-table").DataTable({
                dom: "lBfrtip",
                buttons: [],
                responsive: 0,
                select: 0,
                fixedHeader: !0,
                ajax: {
                    "url": "/Recharge/AgentSearch",
                    "type": "POST",
                    "data": function (d) {
                        d.type = '@Model.DT_RowId'
                    }
                },
                "processing": true,
                "serverSide": true,
                columns: [
                    { data: 'Name' },
                    { data: 'Cost' },
                    {
                        "render": function (data, type, JsonResultRow, meta) {
                            var actions = "";
                            actions += '<a class=\'btn btn-warning btn-sm\' href=\'/Business/Edit/' + JsonResultRow.DT_RowId + '\'>Editar</a>';
                            return actions;
                        }
                    }
                ],
                "rowCallback": function (row, data) {
                    /* mainView.contents.push(new dataModel(data));*/
                },
                "iDisplayLength": 25,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "select": {
                        "rows": "%d registros seleccionados"
                    }
                },
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false
                }],
                "order": [[0, "desc"]]
            });

        });
    </script>
}